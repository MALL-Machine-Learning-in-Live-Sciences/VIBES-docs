{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"VIBES - VagInal Bacterial subtyping using machine learning for Enhanced classification of bacterial vaginosiS The VIBES package computes clusters of biological significance from 20 species from vaginal microbiome. The package works with three types of input data: matrix, dataframe and phyloseq. In case the provided object is a phyloseq the package automatically extracts the matrix of interest to execute the rest. In case the object is a dataframe or a matrix the samples must be in the rows and the species in the columns. The 20 species used by the package are as follows, and regardless of the object passed must be named as such ( Genus_species ): Aerococcus_christensenii, Campylobacter_ureolyticus, Finegoldia_magna, Lactobacillus_crispatus, Lactobacillus_gasseri, Porphyromonas_uenonis, Prevotella_bivia, Prevotella_timonensis, Atopobium_vaginae, Lactobacillus_iners, Prevotella_amnii, Prevotella_disiens, Staphylococcus_haemolyticus, Veillonella_montpellierensis, Alistipes_finegoldii, Gardnerella_vaginalis, Mycoplasma_hominis, Mobiluncus_mulieris, Prevotella_buccalis and Sneathia_sanguinegens. Original data VIBES used five different 16S rRNA cohorts from vaginal environment to find the clusters. Discovery cohort SRA022855: Vaginal bacterial communities of 396 North American women (Baltimore and Atlanta), between the ages of 12 and 45 (mean age: 30). Women included in the study self-identified as African American (n=104), White (n=98), Hispanic (n=97), and Asian (n=97). Publication Validation cohorts SRA051298: Vaginal bacterial communities of 220 North American women (Seattle), between the ages of 18 and 57 (mean age: 29). Women included in the study self-identified as African American (n=75), White (n=97), Asian (n=15), and Others (n=33). Publication PRJNA208535: Vaginal bacterial communities of 25 North American women (Birmingham) over 10 weeks (1657 16S raw samples on repo.), between the ages of 19 and 45 (mean age: 27). Women included in the study self-identified as African American (n=20), and White (n=5). Publication PRJNA797778: Vaginal bacterial communities of 39 North American women (Baltimore) over 10 weeks (220 16S raw samples on repo.), between the ages of 19 and 45. Women included in the study self-identified as African American (n=24), White (n=10), Hispanic (n=4), and Asian (n=1). Publication PRJNA302078: Vaginal bacterial communities of 65 Chinese women (Beijing) over 3 time points: pretreatment, one week after treatment and one month after treatment with metronidazole (201 16S raw samples on repo.), between the ages of 18 and 53. Publication Moreover, we used PRJNA302078 to explore the relationship between our stratification methodology and the response to metronidazole antibiotic.","title":"What is VIBES?"},{"location":"#vibes-vaginal-bacterial-subtyping-using-machine-learning-for-enhanced-classification-of-bacterial-vaginosis","text":"The VIBES package computes clusters of biological significance from 20 species from vaginal microbiome. The package works with three types of input data: matrix, dataframe and phyloseq. In case the provided object is a phyloseq the package automatically extracts the matrix of interest to execute the rest. In case the object is a dataframe or a matrix the samples must be in the rows and the species in the columns. The 20 species used by the package are as follows, and regardless of the object passed must be named as such ( Genus_species ): Aerococcus_christensenii, Campylobacter_ureolyticus, Finegoldia_magna, Lactobacillus_crispatus, Lactobacillus_gasseri, Porphyromonas_uenonis, Prevotella_bivia, Prevotella_timonensis, Atopobium_vaginae, Lactobacillus_iners, Prevotella_amnii, Prevotella_disiens, Staphylococcus_haemolyticus, Veillonella_montpellierensis, Alistipes_finegoldii, Gardnerella_vaginalis, Mycoplasma_hominis, Mobiluncus_mulieris, Prevotella_buccalis and Sneathia_sanguinegens.","title":"VIBES - VagInal Bacterial subtyping using machine learning for Enhanced classification of bacterial vaginosiS"},{"location":"#original-data","text":"VIBES used five different 16S rRNA cohorts from vaginal environment to find the clusters.","title":"Original data"},{"location":"#discovery-cohort","text":"SRA022855: Vaginal bacterial communities of 396 North American women (Baltimore and Atlanta), between the ages of 12 and 45 (mean age: 30). Women included in the study self-identified as African American (n=104), White (n=98), Hispanic (n=97), and Asian (n=97). Publication","title":"Discovery cohort"},{"location":"#validation-cohorts","text":"SRA051298: Vaginal bacterial communities of 220 North American women (Seattle), between the ages of 18 and 57 (mean age: 29). Women included in the study self-identified as African American (n=75), White (n=97), Asian (n=15), and Others (n=33). Publication PRJNA208535: Vaginal bacterial communities of 25 North American women (Birmingham) over 10 weeks (1657 16S raw samples on repo.), between the ages of 19 and 45 (mean age: 27). Women included in the study self-identified as African American (n=20), and White (n=5). Publication PRJNA797778: Vaginal bacterial communities of 39 North American women (Baltimore) over 10 weeks (220 16S raw samples on repo.), between the ages of 19 and 45. Women included in the study self-identified as African American (n=24), White (n=10), Hispanic (n=4), and Asian (n=1). Publication PRJNA302078: Vaginal bacterial communities of 65 Chinese women (Beijing) over 3 time points: pretreatment, one week after treatment and one month after treatment with metronidazole (201 16S raw samples on repo.), between the ages of 18 and 53. Publication Moreover, we used PRJNA302078 to explore the relationship between our stratification methodology and the response to metronidazole antibiotic.","title":"Validation cohorts"},{"location":"citation/","text":"How to cite VIBES: a consensus subtyping of the vaginal microbiota reveals novel classification criteria. Fern\u00e1ndez-Edreira, D., Li\u00f1ares-Blanco, J., V. del R\u00edo, P. and Fernandez-Lozano, C. Under Review . Contributing We welcome contributions to VIBES . Please submit a pull request or open an issue on the GitHub repository. License VIBES is released under the MIT License.","title":"Citation"},{"location":"citation/#how-to-cite","text":"VIBES: a consensus subtyping of the vaginal microbiota reveals novel classification criteria. Fern\u00e1ndez-Edreira, D., Li\u00f1ares-Blanco, J., V. del R\u00edo, P. and Fernandez-Lozano, C. Under Review .","title":"How to cite"},{"location":"citation/#contributing","text":"We welcome contributions to VIBES . Please submit a pull request or open an issue on the GitHub repository.","title":"Contributing"},{"location":"citation/#license","text":"VIBES is released under the MIT License.","title":"License"},{"location":"contact/","text":"Contact If you have any questions, comments, or suggestions, please feel free to contact us at: Diego Fern\u00e1ndez Edreira Email: diego.fedreira@udc.es Twitter: @diego_edreira GitHub: DiegoFE94 Jose Li\u00f1ares Blanco, PhD Email: j.linares@udc.es Twitter: @8JoseLinares GitHub: jlinaresb Carlos Fernandez-Lozano, PhD Email: carlos.fernandez@udc.es Twitter: @cafernandezlo GitHub: cafernandezlo","title":"Contact"},{"location":"contact/#contact","text":"If you have any questions, comments, or suggestions, please feel free to contact us at: Diego Fern\u00e1ndez Edreira Email: diego.fedreira@udc.es Twitter: @diego_edreira GitHub: DiegoFE94 Jose Li\u00f1ares Blanco, PhD Email: j.linares@udc.es Twitter: @8JoseLinares GitHub: jlinaresb Carlos Fernandez-Lozano, PhD Email: carlos.fernandez@udc.es Twitter: @cafernandezlo GitHub: cafernandezlo","title":"Contact"},{"location":"usecase/","text":"VIBES Use Case This code demonstrates a workflow to take advange of VIBES funcionality to go further in our microbiome analysis. VIBES output will be used for a Machine Learning classification task, in this case to predict the response to treatment. We used PRJNA302078 included in VIBES to run the analysis. The downstream analysis based on ML will be performed with mlr3 package. In summary, the code processes microbiome data, applies dimensionality reduction, and performs classification using the classif.ranger learner. It also includes benchmarking and visualization of classification performance. require(VIBES) require(ggplot2) require(PCAtools) require(phyloseq) require(dplyr) require(microbiome) require(mlr3) require(mlr3learners) require(mlr3benchmark) require(mlr3viz) Data The microbiome data is obtained from the PRJNA302078 dataset. The code performs preprocessing on the data, focusing on the taxonomic rank Species . In order to predict treatment response based on pre-treatment data, we format the sample_data and keep only those samples at baseline. # get data and preprocess data(\"PRJNA302078\") pseq = tax_glom(PRJNA302078, taxrank = \"Species\") pseq@sam_data$visits = as.numeric(sapply(strsplit(pseq@sam_data$sample_alias, \"D\"), \"[\", 2)) pseq = subset_samples(pseq, visits==0) Data Transformation The code uses Principal Component Analysis (PCA) to reduce the dimensionality of the microbiome data. We used VIBES to extract the probabilities of belonging to each cluster. These variables will be used later as predictive variables. # Calculate VIBES vibes <- get_VIBES(object = pseq, column = 7) otus <- t(vibes@otu_table@.Data) # otus data otus_d <- data.frame( microbiome::transform(otus, 'clr'), status = vibes@sam_data$status) # get pca pca <- PCAtools::pca(mat = otus_d %>% select(-c(status)) %>% t()) otus_pca <- pca$rotated[, 1:3] %>% mutate(status = as.factor(otus_d$status)) # vibes data vibes_d <- data.frame( VCS.I = vibes@sam_data$VCS.I, VCS.I = vibes@sam_data$VCS.II, VCS.I = vibes@sam_data$VCS.III, VCS.I = vibes@sam_data$VCS.IV, status = vibes@sam_data$status ) # otus + vibes otus_vibes <- data.frame( otus_pca, vibes_d %>% select(-c(status)) ) Machine Learning prediction Two classification tasks are defined: otus_task uses PCA-transformed microbiome data to predict the status variable with a positive class of Cured . otus_vibes_task combines the PCA-transformed microbiome data with VIBES features to predict the status variable with a positive class of Cured . The code uses the classif.ranger learner for classification tasks, configured to predict probabilities. Cross-validation with 4 folds due to limited sample size is employed as the outer resampling strategy. It runs the benchmark, evaluating the classification performance of the learner. The results are visualized using the area under the curve (AUC) measure. # Machine Learning otus_task <- TaskClassif$new(id = \"asv\", backend = otus_pca, target = \"status\", positive = \"Cured\") otus_vibes_task <- TaskClassif$new(id = \"asv_vibes\", backend = otus_vibes, target = \"status\", positive = \"Cured\") tasks <- list(otus_task, otus_vibes_task) # Make learner learner <- lrn(\"classif.ranger\", predict_type = \"prob\") # outer resampling set.seed(12345) outer <- rsmp(\"cv\", folds = 4) # Run benchmark design = benchmark_grid(tasks, learner, outer) bmr = benchmark(design) # Plotting autoplot(bmr, measure = msr(\"classif.auc\")) + ylim(c(0,1)) We can see how the inclusion of VIBES features outperform the prediction task.","title":"Use case"},{"location":"usecase/#vibes-use-case","text":"This code demonstrates a workflow to take advange of VIBES funcionality to go further in our microbiome analysis. VIBES output will be used for a Machine Learning classification task, in this case to predict the response to treatment. We used PRJNA302078 included in VIBES to run the analysis. The downstream analysis based on ML will be performed with mlr3 package. In summary, the code processes microbiome data, applies dimensionality reduction, and performs classification using the classif.ranger learner. It also includes benchmarking and visualization of classification performance. require(VIBES) require(ggplot2) require(PCAtools) require(phyloseq) require(dplyr) require(microbiome) require(mlr3) require(mlr3learners) require(mlr3benchmark) require(mlr3viz)","title":"VIBES Use Case"},{"location":"usecase/#data","text":"The microbiome data is obtained from the PRJNA302078 dataset. The code performs preprocessing on the data, focusing on the taxonomic rank Species . In order to predict treatment response based on pre-treatment data, we format the sample_data and keep only those samples at baseline. # get data and preprocess data(\"PRJNA302078\") pseq = tax_glom(PRJNA302078, taxrank = \"Species\") pseq@sam_data$visits = as.numeric(sapply(strsplit(pseq@sam_data$sample_alias, \"D\"), \"[\", 2)) pseq = subset_samples(pseq, visits==0)","title":"Data"},{"location":"usecase/#data-transformation","text":"The code uses Principal Component Analysis (PCA) to reduce the dimensionality of the microbiome data. We used VIBES to extract the probabilities of belonging to each cluster. These variables will be used later as predictive variables. # Calculate VIBES vibes <- get_VIBES(object = pseq, column = 7) otus <- t(vibes@otu_table@.Data) # otus data otus_d <- data.frame( microbiome::transform(otus, 'clr'), status = vibes@sam_data$status) # get pca pca <- PCAtools::pca(mat = otus_d %>% select(-c(status)) %>% t()) otus_pca <- pca$rotated[, 1:3] %>% mutate(status = as.factor(otus_d$status)) # vibes data vibes_d <- data.frame( VCS.I = vibes@sam_data$VCS.I, VCS.I = vibes@sam_data$VCS.II, VCS.I = vibes@sam_data$VCS.III, VCS.I = vibes@sam_data$VCS.IV, status = vibes@sam_data$status ) # otus + vibes otus_vibes <- data.frame( otus_pca, vibes_d %>% select(-c(status)) )","title":"Data Transformation"},{"location":"usecase/#machine-learning-prediction","text":"Two classification tasks are defined: otus_task uses PCA-transformed microbiome data to predict the status variable with a positive class of Cured . otus_vibes_task combines the PCA-transformed microbiome data with VIBES features to predict the status variable with a positive class of Cured . The code uses the classif.ranger learner for classification tasks, configured to predict probabilities. Cross-validation with 4 folds due to limited sample size is employed as the outer resampling strategy. It runs the benchmark, evaluating the classification performance of the learner. The results are visualized using the area under the curve (AUC) measure. # Machine Learning otus_task <- TaskClassif$new(id = \"asv\", backend = otus_pca, target = \"status\", positive = \"Cured\") otus_vibes_task <- TaskClassif$new(id = \"asv_vibes\", backend = otus_vibes, target = \"status\", positive = \"Cured\") tasks <- list(otus_task, otus_vibes_task) # Make learner learner <- lrn(\"classif.ranger\", predict_type = \"prob\") # outer resampling set.seed(12345) outer <- rsmp(\"cv\", folds = 4) # Run benchmark design = benchmark_grid(tasks, learner, outer) bmr = benchmark(design) # Plotting autoplot(bmr, measure = msr(\"classif.auc\")) + ylim(c(0,1)) We can see how the inclusion of VIBES features outperform the prediction task.","title":"Machine Learning prediction"},{"location":"userguide/","text":"VIBES User Guide Installation The installation of VIBES is done via GitHub. For this you need to install the devtools package via the function install_github . In addition VIBES has dependencies via Bioconductor so it will be necessary to install the associated BiocManager package. This will allow you to install the phyloseq package. # Installation requires devtools and bioconductor, please use the following commands if (!requireNamespace(\"BiocManager\")) install.packages(\"BiocManager\") BiocManager::install() install.packages(\"devtools\") # Before installing VIBES, you need also to install the dependent package `phyloseq` BiocManager::install(\"phyloseq\") # Install VIBES from github devtools::install_github(\"DiegoFE94/VIBES\") Usage Before starting the demonstration, you need to load the following packages: require(phyloseq) #> Loading required package: phyloseq library(VIBES) The package works with three types of input data: matrix, dataframe and phyloseq. The following example works with a phyloseq object from the PRJNA208535 cohort. In this case the phyloseq object is made up of the counts of 1657 microbiome profiles. data(\"PRJNA208535\") # Load a pseq with 1657 samples 22 species and 7 taxonomic ranks print(PRJNA208535) #> phyloseq-class experiment-level object #> otu_table() OTU Table: [ 6284 taxa and 1657 samples ] #> sample_data() Sample Data: [ 1657 samples by 25 sample variables ] #> tax_table() Taxonomy Table: [ 6284 taxa by 7 taxonomic ranks ] #> refseq() DNAStringSet: [ 6284 reference sequences ] # Note that the otu table is made up of the counts otu_table(PRJNA208535)[1:5,1:5] #> OTU Table: [5 taxa and 5 samples] #> taxa are rows #> SRR902006 SRR902881 SRR903842 SRR903941 SRR903945 #> ASV1 0 0 0 0 0 #> ASV2 188890 3623 0 0 0 #> ASV3 0 0 0 0 0 #> ASV4 0 0 3345 1709 590 #> ASV5 0 0 0 0 0 tax_table(PRJNA208535)[1:5,6:7] #> Taxonomy Table: [5 taxa by 2 taxonomic ranks]: #> Genus Species #> ASV1 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV2 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV3 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV4 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV5 \"Lactobacillus\" NA Before running the package, the clinical data is made up of 25 variables, the last six are: # Sample data has no info about clusters sample_data(PRJNA208535)[1:5,20:25] #> VAG_ITCH VAG_BURN VAG_DIS MENSTRU1 MENSTRU2 MENSTRU3 #> SRR902006 NA NA NA NA NA NA #> SRR902881 0 0 0 NA NA NA #> SRR903842 0 0 0 NA NA NA #> SRR903941 0 0 0 NA NA NA #> SRR903945 0 0 0 NA NA NA The main function of VIBES is get_VIBES . This function has two parameters: object: 16S rRNA data in a phyloseq, matrix or a data frame. For matrix and data frames, samples in rows and species in columns. column: only for phyloseq objects. Column number occupied by the taxonomic rank Species . Default value is the last column. # Compute clusterization pseq_w_clusters <- get_VIBES(object = PRJNA208535) #> Remember that the species names must be in the following format: Genus_species get_VIBES() returns an object ( pseq_w_clusters ) of the same type as the input, but with 5 new columns. Interpreting the results The object returned by the get_VIBES() function contains the probability (ranging from 0 to 1) of membership of each sample to each of the four clusters ( VCS.I , VCS.II , VCS.III and VCS.IV ), as well as a final column ( p_cluster ) with the assigned label. # Check sample data of the new object 'pseq_w_clusters' sample_data(pseq_w_clusters)[1:5,25:30] #> MENSTRU3 VCS.I VCS.II VCS.III VCS.IV p_cluster #> SRR902006 NA 2.883447e-18 0.9998651 3.257710e-06 1.315948e-04 VCS-II #> SRR902881 NA 7.292814e-24 1.0000000 9.895719e-12 8.154546e-10 VCS-II #> SRR903842 NA 2.211632e-20 1.0000000 3.602075e-10 1.755376e-08 VCS-II #> SRR903941 NA 4.992614e-26 1.0000000 1.369296e-10 8.586513e-09 VCS-II #> SRR903945 NA 3.820220e-24 0.9941218 1.527713e-07 5.878046e-03 VCS-II","title":"VIBES User Guide"},{"location":"userguide/#vibes-user-guide","text":"","title":"VIBES User Guide"},{"location":"userguide/#installation","text":"The installation of VIBES is done via GitHub. For this you need to install the devtools package via the function install_github . In addition VIBES has dependencies via Bioconductor so it will be necessary to install the associated BiocManager package. This will allow you to install the phyloseq package. # Installation requires devtools and bioconductor, please use the following commands if (!requireNamespace(\"BiocManager\")) install.packages(\"BiocManager\") BiocManager::install() install.packages(\"devtools\") # Before installing VIBES, you need also to install the dependent package `phyloseq` BiocManager::install(\"phyloseq\") # Install VIBES from github devtools::install_github(\"DiegoFE94/VIBES\")","title":"Installation"},{"location":"userguide/#usage","text":"Before starting the demonstration, you need to load the following packages: require(phyloseq) #> Loading required package: phyloseq library(VIBES) The package works with three types of input data: matrix, dataframe and phyloseq. The following example works with a phyloseq object from the PRJNA208535 cohort. In this case the phyloseq object is made up of the counts of 1657 microbiome profiles. data(\"PRJNA208535\") # Load a pseq with 1657 samples 22 species and 7 taxonomic ranks print(PRJNA208535) #> phyloseq-class experiment-level object #> otu_table() OTU Table: [ 6284 taxa and 1657 samples ] #> sample_data() Sample Data: [ 1657 samples by 25 sample variables ] #> tax_table() Taxonomy Table: [ 6284 taxa by 7 taxonomic ranks ] #> refseq() DNAStringSet: [ 6284 reference sequences ] # Note that the otu table is made up of the counts otu_table(PRJNA208535)[1:5,1:5] #> OTU Table: [5 taxa and 5 samples] #> taxa are rows #> SRR902006 SRR902881 SRR903842 SRR903941 SRR903945 #> ASV1 0 0 0 0 0 #> ASV2 188890 3623 0 0 0 #> ASV3 0 0 0 0 0 #> ASV4 0 0 3345 1709 590 #> ASV5 0 0 0 0 0 tax_table(PRJNA208535)[1:5,6:7] #> Taxonomy Table: [5 taxa by 2 taxonomic ranks]: #> Genus Species #> ASV1 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV2 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV3 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV4 \"Lactobacillus\" \"Lactobacillus_iners\" #> ASV5 \"Lactobacillus\" NA Before running the package, the clinical data is made up of 25 variables, the last six are: # Sample data has no info about clusters sample_data(PRJNA208535)[1:5,20:25] #> VAG_ITCH VAG_BURN VAG_DIS MENSTRU1 MENSTRU2 MENSTRU3 #> SRR902006 NA NA NA NA NA NA #> SRR902881 0 0 0 NA NA NA #> SRR903842 0 0 0 NA NA NA #> SRR903941 0 0 0 NA NA NA #> SRR903945 0 0 0 NA NA NA The main function of VIBES is get_VIBES . This function has two parameters: object: 16S rRNA data in a phyloseq, matrix or a data frame. For matrix and data frames, samples in rows and species in columns. column: only for phyloseq objects. Column number occupied by the taxonomic rank Species . Default value is the last column. # Compute clusterization pseq_w_clusters <- get_VIBES(object = PRJNA208535) #> Remember that the species names must be in the following format: Genus_species get_VIBES() returns an object ( pseq_w_clusters ) of the same type as the input, but with 5 new columns.","title":"Usage"},{"location":"userguide/#interpreting-the-results","text":"The object returned by the get_VIBES() function contains the probability (ranging from 0 to 1) of membership of each sample to each of the four clusters ( VCS.I , VCS.II , VCS.III and VCS.IV ), as well as a final column ( p_cluster ) with the assigned label. # Check sample data of the new object 'pseq_w_clusters' sample_data(pseq_w_clusters)[1:5,25:30] #> MENSTRU3 VCS.I VCS.II VCS.III VCS.IV p_cluster #> SRR902006 NA 2.883447e-18 0.9998651 3.257710e-06 1.315948e-04 VCS-II #> SRR902881 NA 7.292814e-24 1.0000000 9.895719e-12 8.154546e-10 VCS-II #> SRR903842 NA 2.211632e-20 1.0000000 3.602075e-10 1.755376e-08 VCS-II #> SRR903941 NA 4.992614e-26 1.0000000 1.369296e-10 8.586513e-09 VCS-II #> SRR903945 NA 3.820220e-24 0.9941218 1.527713e-07 5.878046e-03 VCS-II","title":"Interpreting the results"}]}